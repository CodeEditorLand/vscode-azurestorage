{
	"name": "@codeeditorland/azurestorage",
	"displayName": "Azure Storage",
	"description": "Manage your Azure Storage accounts including Blob Containers, File Shares, Tables and Queues",
	"main": "main",
	"browser": "./dist/web/extension.bundle.js",
	"scripts": {
		"all": "npm i && npm run lint && npm test",
		"build": "tsc",
		"cleanReadme": "gulp cleanReadme",
		"compile": "tsc -watch",
		"setazcopypermissions": "gulp setAzCopyExePermissions",
		"webpack": "npm run build && gulp webpack-dev",
		"webpack-prod": "npm run build && gulp webpack-prod",
		"webpack-profile": "webpack --profile --json --mode production > webpack-stats.json && echo Use http://webpack.github.io/analyse to analyze the stats"
	},
	"contributes": {
		"commands": [
			{
				"category": "Azure Storage",
				"command": "azureStorage.openInFileExplorer",
				"icon": "$(file-symlink-directory)",
				"title": "Open in Explorer..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.refresh",
				"icon": "$(refresh)",
				"title": "Refresh"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.configureStaticWebsite",
				"title": "Configure Static Website..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.disableStaticWebsite",
				"title": "Disable Static Website"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.browseStaticWebsite",
				"title": "Browse Static Website"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deployStaticWebsite",
				"icon": "$(cloud-upload)",
				"title": "Deploy to Static Website via Azure Storage..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.copyUrl",
				"title": "Copy URL"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.openBlobContainer",
				"title": "Open in Storage Explorer"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.openTable",
				"title": "Open in Storage Explorer"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.openFileShare",
				"title": "Open in Storage Explorer"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.openQueue",
				"title": "Open in Storage Explorer"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.openStorageAccount",
				"title": "Open in Storage Explorer"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.copyPrimaryKey",
				"title": "Copy Primary Key"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.copyConnectionString",
				"title": "Copy Connection String"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createBlobContainer",
				"title": "Create Blob Container..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteBlobContainer",
				"title": "Delete Blob Container..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createBlockBlob",
				"title": "Create Empty Blob..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.uploadFiles",
				"title": "Upload Files..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.uploadFolder",
				"title": "Upload Folder..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.downloadTreeItems",
				"title": "Download..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.downloadSasUrl",
				"icon": "$(cloud-download)",
				"title": "Download by SAS Url..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createFileShare",
				"title": "Create File Share..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteFileShare",
				"title": "Delete File Share..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteStorageAccount",
				"title": "Delete Storage Account..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createDirectory",
				"title": "Create Directory..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createSubdirectory",
				"title": "Create Subdirectory..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteDirectory",
				"title": "Delete..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createFile",
				"title": "Create Empty File..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createGpv2Account",
				"icon": "$(add)",
				"title": "Create Storage Account..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createGpv2AccountAdvanced",
				"title": "Create Storage Account... (Advanced)"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteFile",
				"title": "Delete..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createTable",
				"title": "Create Table..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteTable",
				"title": "Delete Table..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.createQueue",
				"title": "Create Queue..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.deleteQueue",
				"title": "Delete Queue..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.uploadToAzureStorage",
				"title": "Upload to Azure Storage..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.attachStorageAccount",
				"icon": "$(plug)",
				"title": "Attach Storage Account..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.detachStorageAccount",
				"title": "Detach Storage Account"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.startBlobEmulator",
				"title": "Start Blob Emulator"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.startQueueEmulator",
				"title": "Start Queue Emulator"
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.reportIssue",
				"title": "Report Issue..."
			},
			{
				"category": "Azure Storage",
				"command": "azureStorage.generateSasUrl",
				"title": "Generate & Copy SAS Token and URL"
			}
		],
		"configuration": {
			"properties": {
				"azureStorage.deleteBeforeDeploy": {
					"default": true,
					"description": "Delete all existing blobs before deploying to static website.",
					"type": "boolean"
				},
				"azureStorage.preDeployTask": {
					"description": "The name of the task to run before deploying.",
					"scope": "resource",
					"type": "string"
				},
				"azureStorage.showExplorer": {
					"default": true,
					"description": "Show or hide the Azure Storage Explorer",
					"type": "boolean"
				},
				"azureStorage.storageExplorerLocation": {
					"default": "/Applications/Microsoft Azure Storage Explorer.app",
					"description": "[Mac only] Set to \"Path/To/Microsoft Azure Storage Explorer.app\" to the location of Storage Explorer. Default is \"/Applications/Microsoft Azure Storage Explorer.app\".",
					"type": "string"
				}
			},
			"title": "Azure Storage Accounts"
		},
		"menus": {
			"azureStorage.submenus.workspaceActions": [
				{
					"command": "azureStorage.downloadSasUrl",
					"group": "1_download@1"
				},
				{
					"command": "azureStorage.attachStorageAccount",
					"group": "2_attach@1"
				},
				{
					"command": "azureStorage.createGpv2Account",
					"group": "3_create@1"
				},
				{
					"command": "azureStorage.createGpv2AccountAdvanced",
					"group": "3_create@2"
				}
			],
			"commandPalette": [
				{
					"command": "azureStorage.copyUrl",
					"when": "never"
				},
				{
					"command": "azureStorage.openBlobContainer",
					"when": "never"
				},
				{
					"command": "azureStorage.createBlockBlob",
					"when": "never"
				},
				{
					"command": "azureStorage.downloadTreeItems",
					"when": "never"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"when": "never"
				},
				{
					"command": "azureStorage.openTable",
					"when": "never"
				},
				{
					"command": "azureStorage.openFileShare",
					"when": "never"
				},
				{
					"command": "azureStorage.createDirectory",
					"when": "never"
				},
				{
					"command": "azureStorage.createSubdirectory",
					"when": "never"
				},
				{
					"command": "azureStorage.deleteDirectory",
					"when": "never"
				},
				{
					"command": "azureStorage.createFile",
					"when": "never"
				},
				{
					"command": "azureStorage.deleteFile",
					"when": "never"
				},
				{
					"command": "azureStorage.openQueue",
					"when": "never"
				},
				{
					"command": "azureStorage.startBlobEmulator",
					"when": "never"
				},
				{
					"command": "azureStorage.startQueueEmulator",
					"when": "never"
				},
				{
					"command": "azureStorage.uploadToAzureStorage",
					"when": "never"
				},
				{
					"command": "azureStorage.openStorageAccount",
					"when": "!remoteName"
				}
			],
			"explorer/context": [
				{
					"command": "azureStorage.deployStaticWebsite",
					"group": "zzz_azuretools_deploy@3",
					"when": "explorerResourceIsFolder == true"
				},
				{
					"command": "azureStorage.uploadToAzureStorage",
					"group": "zzzz_azurestorage@1",
					"when": "isFileSystemResource == true"
				}
			],
			"view/item/context": [
				{
					"command": "azureStorage.createGpv2Account",
					"group": "1@1",
					"when": "view == azureResourceGroups && viewItem =~ /azureResourceTypeGroup/ && viewItem =~ /storageaccounts/i"
				},
				{
					"command": "azureStorage.createGpv2AccountAdvanced",
					"group": "1@2",
					"when": "view == azureResourceGroups && viewItem =~ /azureResourceTypeGroup/ && viewItem =~ /storageaccounts/i"
				},
				{
					"$comment": "========= azureStorageAccount =========",
					"command": "azureStorage.openStorageAccount",
					"group": "navigation@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/ && !isWeb && !isLinux && !remoteName"
				},
				{
					"command": "azureStorage.openInFileExplorer",
					"group": "navigation@3",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare || viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.openInFileExplorer",
					"group": "inline",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare || viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.copyConnectionString",
					"group": "5_cutcopypaste@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"command": "azureStorage.copyPrimaryKey",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"command": "azureStorage.browseStaticWebsite",
					"group": "6_staticwebsites@1",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"command": "azureStorage.deployStaticWebsite",
					"group": "6_staticwebsites@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"command": "azureStorage.configureStaticWebsite",
					"group": "6_staticwebsites@3",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"command": "azureStorage.disableStaticWebsite",
					"group": "6_staticwebsites@4",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"$comment": "========= azureBlobContainerGroup =========",
					"command": "azureStorage.createBlobContainer",
					"group": "2_create",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainerGroup"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainerGroup"
				},
				{
					"$comment": "========= azureBlobContainer =========",
					"command": "azureStorage.openBlobContainer",
					"group": "navigation@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer && !isWeb && !isLinux && !remoteName"
				},
				{
					"command": "azureStorage.createBlockBlob",
					"group": "2_create@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.uploadFiles",
					"group": "2_create@2",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.uploadFolder",
					"group": "2_create@3",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.downloadTreeItems",
					"group": "3_download",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.copyUrl",
					"group": "5_cutcopypaste",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.browseStaticWebsite",
					"group": "6_staticwebsites@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.deployStaticWebsite",
					"group": "6_staticwebsites@2",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.configureStaticWebsite",
					"group": "6_staticwebsites@3",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.disableStaticWebsite",
					"group": "6_staticwebsites@4",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.deleteBlobContainer",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobContainer"
				},
				{
					"command": "azureStorage.downloadTreeItems",
					"group": "3_download",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobFile"
				},
				{
					"command": "azureStorage.copyUrl",
					"group": "5_cutcopypaste@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobFile"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azureBlobFile"
				},
				{
					"$comment": "========= azureBlobDirectory ==========",
					"command": "azureStorage.downloadTreeItems",
					"group": "3_download",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobDirectory"
				},
				{
					"command": "azureStorage.copyUrl",
					"group": "5_cutcopypaste@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureBlobDirectory"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azureBlobDirectory"
				},
				{
					"$comment": "========= azureFileShareGroup =========",
					"command": "azureStorage.createFileShare",
					"group": "2_create",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareGroup"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareGroup"
				},
				{
					"$comment": "========= azureFileShare =========",
					"command": "azureStorage.openFileShare",
					"group": "navigation@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare && !isWeb && !isLinux && !remoteName"
				},
				{
					"command": "azureStorage.createFile",
					"group": "2_create@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.createDirectory",
					"group": "2_create@2",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.uploadFiles",
					"group": "2_create@3",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.uploadFolder",
					"group": "2_create@4",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.downloadTreeItems",
					"group": "3_download",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.copyUrl",
					"group": "5_cutcopypaste@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.deleteFileShare",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"command": "azureStorage.deleteStorageAccount",
					"group": "7_modification",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem =~ /azureStorageAccount/"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShare"
				},
				{
					"$comment": "========= azureFile =========",
					"command": "azureStorage.downloadTreeItems",
					"group": "3_download",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFile"
				},
				{
					"command": "azureStorage.copyUrl",
					"group": "5_cutcopypaste@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFile"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azureFile"
				},
				{
					"command": "azureStorage.deleteFile",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFile || viewItem == azureBlobFile"
				},
				{
					"$comment": "========= azureFileShareDirectory =========",
					"command": "azureStorage.createFile",
					"group": "2_create@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareDirectory"
				},
				{
					"command": "azureStorage.downloadTreeItems",
					"group": "3_download",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareDirectory"
				},
				{
					"command": "azureStorage.createSubdirectory",
					"group": "2_create@2",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareDirectory"
				},
				{
					"command": "azureStorage.copyUrl",
					"group": "5_cutcopypaste@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareDirectory"
				},
				{
					"command": "azureStorage.generateSasUrl",
					"group": "5_cutcopypaste@2",
					"when": "view =~ /(azureResourceGroups|azureFocusView)/ && viewItem == azureFileShareDirectory"
				},
				{
					"command": "azureStorage.deleteDirectory",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareDirectory || viewItem == azureBlobDirectory"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureFileShareDirectory"
				},
				{
					"$comment": "========= azureQueueGroup =========",
					"command": "azureStorage.createQueue",
					"group": "2_create",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureQueueGroup"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureQueueGroup"
				},
				{
					"$comment": "========= azureQueue =========",
					"command": "azureStorage.openQueue",
					"group": "navigation@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureQueue && !isWeb && !isLinux && !remoteName"
				},
				{
					"command": "azureStorage.deleteQueue",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureQueue"
				},
				{
					"$comment": "========= azureTableGroup =========",
					"command": "azureStorage.createTable",
					"group": "2_create",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureTableGroup"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureTableGroup"
				},
				{
					"$comment": "========= azureTable =========",
					"command": "azureStorage.openTable",
					"group": "navigation@1",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureTable && !isWeb && !isLinux && !remoteName"
				},
				{
					"command": "azureStorage.deleteTable",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureTable"
				},
				{
					"command": "azureStorage.attachStorageAccount",
					"group": "2_create",
					"when": "view == azureWorkspace && viewItem == attachedStorageAccounts"
				},
				{
					"command": "azureStorage.detachStorageAccount",
					"group": "7_modification",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == azureStorageAccount-attached"
				},
				{
					"command": "azureStorage.refresh",
					"group": "9_refresh",
					"when": "view =~ /azure(Workspace|ResourceGroups|focusView)/i && viewItem == attachedStorageAccounts"
				}
			],
			"view/title": [
				{
					"group": "navigation@5",
					"submenu": "azureStorage.submenus.workspaceActions",
					"when": "view == azureWorkspace"
				}
			]
		},
		"submenus": [
			{
				"icon": {
					"dark": "resources/storageAccount.png",
					"light": "resources/storageAccount.png"
				},
				"id": "azureStorage.submenus.workspaceActions",
				"label": "Azure Storage"
			}
		],
		"x-azResources": {
			"activation": {
				"onFetch": [
					"microsoft.storage/storageaccounts"
				]
			},
			"azure": {
				"branches": [
					{
						"type": "StorageAccounts"
					}
				]
			},
			"commands": [
				{
					"command": "azureStorage.createGpv2Account",
					"detail": "For file storage and static file hosting.",
					"title": "Create Storage Account...",
					"type": "StorageAccounts"
				}
			],
			"workspace": {
				"branches": [
					{
						"type": "storageEmulator"
					}
				],
				"resources": true
			}
		}
	},
	"activationEvents": [
		"onFileSystem:azurestorage",
		"onFileSystem:azurestorageblob",
		"onView:azureWorkspace"
	],
	"dependencies": {
		"glob": "11.0.1",
		"jsdom": "26.0.0",
		"mime": "4.0.6",
		"open": "10.1.0",
		"p-retry": "6.2.1",
		"winreg": "1.2.5"
	},
	"devDependencies": {
		"@types/fs-extra": "11.0.4",
		"@types/jsdom": "21.1.7",
		"@types/mime": "4.0.0",
		"@types/node": "22.13.4",
		"@types/p-retry": "3.0.1",
		"@types/winreg": "1.2.36"
	},
	"extensionDependencies": [
		"ms-azuretools.vscode-azureresourcegroups"
	],
	"icon": "resources/storageAccount.png",
	"galleryBanner": {
		"color": "#0072c6",
		"theme": "dark"
	},
	"preview": true,
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"capabilities": {
		"virtualWorkspaces": {
			"description": "In virtual workspaces, uploading files or folders to Azure Storage is not supported.",
			"supported": "limited"
		}
	}
}
